from pymongo import MongoClient
import face_recognition
import numpy as np

# Connect to MongoDB
client = MongoClient('localhost', 27017)
db = client.face_recognition_db
collection = db.known_faces

# Function to compute Euclidean distance between two encodings
def face_distance(known_encoding, face_encoding):
    return np.linalg.norm(np.array(known_encoding) - np.array(face_encoding))

# Function to find the closest match
def find_closest_face(face_encoding):
    known_faces = collection.find()
    closest_match = None
    min_distance = float('inf')

    for face in known_faces:
        distance = face_distance(face['encoding'], face_encoding)
        if distance < min_distance:
            min_distance = distance
            closest_match = face

    return closest_match if min_distance < 0.6 else None  # 0.6 threshold for similarity

# Example: Matching a face encoding
test_encoding = [
      -0.18365612626075745,
      0.1199551597237587,
      -0.06536865234375,
      0.004726193845272064,
      -0.0818464383482933,
      0.052420929074287415,
      0.03948880732059479,
      -0.09796151518821716,
      0.06734852492809296,
      -0.06872429698705673,
      0.17011195421218872,
      -0.043023481965065,
      -0.35448354482650757,
      -0.049392908811569214,
      0.05938122794032097,
      0.11932746320962906,
      -0.1889156699180603,
      -0.201040118932724,
      -0.15715163946151733,
      -0.07093338668346405,
      -0.03007844090461731,
      -0.04807715490460396,
      -0.08754989504814148,
      -0.03782845288515091,
      -0.15314924716949463,
      -0.2937255799770355,
      -0.0726410299539566,
      -0.0535111129283905,
      -0.01665627583861351,
      -0.046279340982437134,
      0.10323910415172577,
      0.047940291464328766,
      -0.16877830028533936,
      -0.001108326017856598,
      0.04787459969520569,
      0.04213014245033264,
      -0.03867301344871521,
      -0.005993969738483429,
      0.21450884640216827,
      -0.09037642925977707,
      -0.1831476241350174,
      -0.04972772300243378,
      0.13595373928546906,
      0.29261332750320435,
      0.16491830348968506,
      0.03848360478878021,
      0.004716724157333374,
      -0.051551640033721924,
      0.08303944766521454,
      -0.27709507942199707,
      0.021206652745604515,
      0.16628259420394897,
      0.1079440712928772,
      0.10912908613681793,
      0.020233862102031708,
      -0.1976543366909027,
      0.04601067304611206,
      0.10693646967411041,
      -0.15533553063869476,
      0.0241510272026062,
      0.07947289198637009,
      -0.11701519787311554,
      -0.08614662289619446,
      -0.05251171439886093,
      0.1898643523454666,
      0.07420391589403152,
      -0.09410852938890457,
      -0.17734543979167938,
      0.24580860137939453,
      -0.16895721852779388,
      -0.07197954505681992,
      0.061328254640102386,
      -0.10522723942995071,
      -0.21450839936733246,
      -0.32983914017677307,
      -0.009757846593856812,
      0.3641592860221863,
      0.14099514484405518,
      -0.12776386737823486,
      0.011824440211057663,
      -0.016752930358052254,
      -0.0035058073699474335,
      0.08121196925640106,
      0.030292481184005737,
      -0.11082296818494797,
      -0.09237536787986755,
      -0.10111727565526962,
      0.07559016346931458,
      0.3065541982650757,
      0.00046281516551971436,
      -0.05606449767947197,
      0.11078062653541565,
      0.06839018315076828,
      -0.07169215381145477,
      0.04715097323060036,
      0.06082408130168915,
      0.020354293286800385,
      -0.062486499547958374,
      -0.1614304780960083,
      0.03370659053325653,
      0.04608931392431259,
      -0.13619454205036163,
      -0.013432502746582031,
      0.14401935040950775,
      -0.1771518439054489,
      0.2101474553346634,
      0.047526076436042786,
      0.015185054391622543,
      -0.07557302713394165,
      -0.019582435488700867,
      -0.0605553574860096,
      0.0861520767211914,
      0.1783413290977478,
      -0.26299354434013367,
      0.22774897515773773,
      0.2120325267314911,
      -0.0014128731563687325,
      0.10299716889858246,
      0.03374525532126427,
      0.041444793343544006,
      -0.03850897401571274,
      -0.025856241583824158,
      -0.2735438346862793,
      -0.1624980866909027,
      0.015580601990222931,
      -0.02029905468225479,
      0.047901079058647156,
      0.07242748141288757
    ]  # Replace with the actual encoding
match = find_closest_face(test_encoding)

if match:
    print(f"Matched with: {match['name']}, Rank: {match['rank']}, Unit: {match['unit']}")
else:
    print("No match found.")
